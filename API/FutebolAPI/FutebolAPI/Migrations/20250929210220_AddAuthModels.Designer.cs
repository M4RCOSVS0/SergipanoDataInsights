// <auto-generated />
using System;
using FutebolAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FutebolAPI.Migrations
{
    [DbContext(typeof(FutebolDbContext))]
    [Migration("20250929210220_AddAuthModels")]
    partial class AddAuthModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FutebolAPI.Models.AggArtilharium", b =>
                {
                    b.Property<int>("JogadorId")
                        .HasColumnType("int")
                        .HasColumnName("JogadorID");

                    b.Property<int?>("Gols")
                        .HasColumnType("int");

                    b.HasKey("JogadorId")
                        .HasName("PK__AggArtil__E3B690731349D8CE");

                    b.ToTable("AggArtilharia");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimClube", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TimeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeId"));

                    b.Property<string>("Escudo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly>("Fundacao")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("Participacoes")
                        .HasColumnType("int");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Titulos")
                        .HasColumnType("int");

                    b.HasKey("TimeId")
                        .HasName("PK__DimClube__E04ED96701F744D7");

                    b.ToTable("DimClube", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.DimDatum", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DataID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataId"));

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date");

                    b.Property<int?>("Dia")
                        .HasColumnType("int");

                    b.Property<string>("DiaSemana")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<int?>("Mes")
                        .HasColumnType("int");

                    b.HasKey("DataId")
                        .HasName("PK__DimData__9D05305DD7FE0131");

                    b.ToTable("DimData");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimEstadio", b =>
                {
                    b.Property<int>("EstadioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EstadioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadioId"));

                    b.Property<int?>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("EstadioId")
                        .HasName("PK__DimEstad__CC2D0FD8AB4B33EF");

                    b.ToTable("DimEstadio", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.DimJogador", b =>
                {
                    b.Property<int>("JogadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JogadorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JogadorId"));

                    b.Property<DateOnly?>("Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Posicao")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("TimeId")
                        .HasColumnType("int")
                        .HasColumnName("TimeID");

                    b.HasKey("JogadorId")
                        .HasName("PK__DimJogad__E3B690734503BF7E");

                    b.HasIndex("TimeId");

                    b.ToTable("DimJogador", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.DimJuiz", b =>
                {
                    b.Property<int>("JuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JuizID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JuizId"));

                    b.Property<string>("Nivel")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nome")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("JuizId")
                        .HasName("PK__DimJuiz__A39816900826A564");

                    b.ToTable("DimJuiz", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatocartao", b =>
                {
                    b.Property<int>("CartaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartaoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartaoId"));

                    b.Property<string>("Cor")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int>("JogadorId")
                        .HasColumnType("int")
                        .HasColumnName("JogadorID");

                    b.Property<int?>("Minuto")
                        .HasColumnType("int");

                    b.Property<int>("PartidaId")
                        .HasColumnType("int")
                        .HasColumnName("PartidaID");

                    b.Property<int?>("Tempo")
                        .HasColumnType("int");

                    b.Property<int>("TimeId")
                        .HasColumnType("int")
                        .HasColumnName("TimeID");

                    b.HasKey("CartaoId")
                        .HasName("PK__fatocart__91510D018CF402E4");

                    b.HasIndex("JogadorId");

                    b.HasIndex("PartidaId");

                    b.HasIndex("TimeId");

                    b.ToTable("fatocartao", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatoclassificacao", b =>
                {
                    b.Property<int>("RodadaId")
                        .HasColumnType("int")
                        .HasColumnName("RodadaID");

                    b.Property<int>("TimeId")
                        .HasColumnType("int")
                        .HasColumnName("TimeID");

                    b.Property<int?>("Derrotas")
                        .HasColumnType("int");

                    b.Property<int?>("Empates")
                        .HasColumnType("int");

                    b.Property<int?>("GolsContra")
                        .HasColumnType("int");

                    b.Property<int?>("GolsPro")
                        .HasColumnType("int");

                    b.Property<int?>("Jogos")
                        .HasColumnType("int");

                    b.Property<int?>("Pontos")
                        .HasColumnType("int");

                    b.Property<int?>("Saldo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("([GolsPro]-[GolsContra])", false);

                    b.Property<int?>("Vitorias")
                        .HasColumnType("int");

                    b.HasKey("RodadaId", "TimeId")
                        .HasName("PK__fatoclas__C452F29F67EE04B6");

                    b.HasIndex("TimeId");

                    b.ToTable("fatoclassificacao", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatogol", b =>
                {
                    b.Property<int>("GolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GolId"));

                    b.Property<int?>("Golcontra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("GOLCONTRA");

                    b.Property<int>("JogadorId")
                        .HasColumnType("int")
                        .HasColumnName("JogadorID");

                    b.Property<int?>("Minuto")
                        .HasColumnType("int");

                    b.Property<int>("PartidaId")
                        .HasColumnType("int")
                        .HasColumnName("PartidaID");

                    b.Property<int?>("Tempo")
                        .HasColumnType("int");

                    b.Property<int?>("TimeId")
                        .HasColumnType("int")
                        .HasColumnName("TimeID");

                    b.HasKey("GolId")
                        .HasName("PK__fatogol__E344E4C011E39039");

                    b.HasIndex("JogadorId");

                    b.HasIndex("PartidaId");

                    b.HasIndex("TimeId");

                    b.ToTable("fatogol", null, t =>
                        {
                            t.HasTrigger("trg_UpdateArtilharia");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatopartidum", b =>
                {
                    b.Property<int>("PartidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartidaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidaId"));

                    b.Property<int>("DataId")
                        .HasColumnType("int")
                        .HasColumnName("DataID");

                    b.Property<int>("EstadioId")
                        .HasColumnType("int")
                        .HasColumnName("EstadioID");

                    b.Property<int>("JuizId")
                        .HasColumnType("int")
                        .HasColumnName("JuizID");

                    b.Property<int?>("Publico")
                        .HasColumnType("int");

                    b.Property<decimal?>("Renda")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Resultado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PartidaId")
                        .HasName("PK__fatopart__E63E1FC34600D184");

                    b.HasIndex("DataId");

                    b.HasIndex("EstadioId");

                    b.HasIndex("JuizId");

                    b.ToTable("fatopartida", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.PontePartidaTime", b =>
                {
                    b.Property<int>("Timeid")
                        .HasColumnType("int")
                        .HasColumnName("TIMEID");

                    b.Property<int>("Partidaid")
                        .HasColumnType("int")
                        .HasColumnName("PARTIDAID");

                    b.Property<int?>("ChutesAgol")
                        .HasColumnType("int")
                        .HasColumnName("ChutesAGol");

                    b.Property<int?>("Escanteios")
                        .HasColumnType("int");

                    b.Property<int?>("Impedimentos")
                        .HasColumnType("int");

                    b.Property<int?>("PosseDeBola")
                        .HasColumnType("int");

                    b.HasKey("Timeid", "Partidaid")
                        .HasName("PK__PontePar__823FDF50538ABE16");

                    b.HasIndex("Partidaid");

                    b.ToTable("PontePartidaTime", (string)null);
                });

            modelBuilder.Entity("FutebolAPI.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId", "ExpiresAt");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("FutebolAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FutebolAPI.Models.AggArtilharium", b =>
                {
                    b.HasOne("FutebolAPI.Models.DimJogador", "Jogador")
                        .WithOne("AggArtilharium")
                        .HasForeignKey("FutebolAPI.Models.AggArtilharium", "JogadorId")
                        .IsRequired()
                        .HasConstraintName("FK__AggArtilh__Jogad__412EB0B6");

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimJogador", b =>
                {
                    b.HasOne("FutebolAPI.Models.DimClube", "Time")
                        .WithMany("DimJogadors")
                        .HasForeignKey("TimeId")
                        .HasConstraintName("FK__DimJogado__TimeI__3E52440B");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatocartao", b =>
                {
                    b.HasOne("FutebolAPI.Models.DimJogador", "Jogador")
                        .WithMany("Fatocartaos")
                        .HasForeignKey("JogadorId")
                        .IsRequired()
                        .HasConstraintName("FK__fatocarta__Jogad__52593CB8");

                    b.HasOne("FutebolAPI.Models.Fatopartidum", "Partida")
                        .WithMany("Fatocartaos")
                        .HasForeignKey("PartidaId")
                        .IsRequired()
                        .HasConstraintName("FK__fatocarta__Parti__5165187F");

                    b.HasOne("FutebolAPI.Models.DimClube", "Time")
                        .WithMany("Fatocartaos")
                        .HasForeignKey("TimeId")
                        .IsRequired()
                        .HasConstraintName("FK__fatocarta__TimeI__534D60F1");

                    b.Navigation("Jogador");

                    b.Navigation("Partida");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatoclassificacao", b =>
                {
                    b.HasOne("FutebolAPI.Models.DimClube", "Time")
                        .WithMany("Fatoclassificacaos")
                        .HasForeignKey("TimeId")
                        .IsRequired()
                        .HasConstraintName("FK__fatoclass__TimeI__5629CD9C");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatogol", b =>
                {
                    b.HasOne("FutebolAPI.Models.DimJogador", "Jogador")
                        .WithMany("Fatogols")
                        .HasForeignKey("JogadorId")
                        .IsRequired()
                        .HasConstraintName("FK__fatogol__Jogador__5BE2A6F2");

                    b.HasOne("FutebolAPI.Models.Fatopartidum", "Partida")
                        .WithMany("Fatogols")
                        .HasForeignKey("PartidaId")
                        .IsRequired()
                        .HasConstraintName("FK__fatogol__Partida__5AEE82B9");

                    b.HasOne("FutebolAPI.Models.DimClube", "Time")
                        .WithMany("Fatogols")
                        .HasForeignKey("TimeId")
                        .HasConstraintName("FK__fatogol__TimeID__5CD6CB2B");

                    b.Navigation("Jogador");

                    b.Navigation("Partida");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatopartidum", b =>
                {
                    b.HasOne("FutebolAPI.Models.DimDatum", "Data")
                        .WithMany("Fatopartida")
                        .HasForeignKey("DataId")
                        .IsRequired()
                        .HasConstraintName("FK__fatoparti__DataI__46E78A0C");

                    b.HasOne("FutebolAPI.Models.DimEstadio", "Estadio")
                        .WithMany("Fatopartida")
                        .HasForeignKey("EstadioId")
                        .IsRequired()
                        .HasConstraintName("FK__fatoparti__Estad__47DBAE45");

                    b.HasOne("FutebolAPI.Models.DimJuiz", "Juiz")
                        .WithMany("Fatopartida")
                        .HasForeignKey("JuizId")
                        .IsRequired()
                        .HasConstraintName("FK__fatoparti__JuizI__48CFD27E");

                    b.Navigation("Data");

                    b.Navigation("Estadio");

                    b.Navigation("Juiz");
                });

            modelBuilder.Entity("FutebolAPI.Models.PontePartidaTime", b =>
                {
                    b.HasOne("FutebolAPI.Models.Fatopartidum", "Partida")
                        .WithMany("PontePartidaTimes")
                        .HasForeignKey("Partidaid")
                        .IsRequired()
                        .HasConstraintName("FK__PontePart__PARTI__4CA06362");

                    b.HasOne("FutebolAPI.Models.DimClube", "Time")
                        .WithMany("PontePartidaTimes")
                        .HasForeignKey("Timeid")
                        .IsRequired()
                        .HasConstraintName("FK__PontePart__TIMEI__4BAC3F29");

                    b.Navigation("Partida");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("FutebolAPI.Models.RefreshToken", b =>
                {
                    b.HasOne("FutebolAPI.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimClube", b =>
                {
                    b.Navigation("DimJogadors");

                    b.Navigation("Fatocartaos");

                    b.Navigation("Fatoclassificacaos");

                    b.Navigation("Fatogols");

                    b.Navigation("PontePartidaTimes");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimDatum", b =>
                {
                    b.Navigation("Fatopartida");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimEstadio", b =>
                {
                    b.Navigation("Fatopartida");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimJogador", b =>
                {
                    b.Navigation("AggArtilharium");

                    b.Navigation("Fatocartaos");

                    b.Navigation("Fatogols");
                });

            modelBuilder.Entity("FutebolAPI.Models.DimJuiz", b =>
                {
                    b.Navigation("Fatopartida");
                });

            modelBuilder.Entity("FutebolAPI.Models.Fatopartidum", b =>
                {
                    b.Navigation("Fatocartaos");

                    b.Navigation("Fatogols");

                    b.Navigation("PontePartidaTimes");
                });

            modelBuilder.Entity("FutebolAPI.Models.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
